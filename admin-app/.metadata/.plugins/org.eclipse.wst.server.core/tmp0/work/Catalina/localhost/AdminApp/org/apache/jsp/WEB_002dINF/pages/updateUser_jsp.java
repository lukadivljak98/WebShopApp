/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.70
 * Generated at: 2023-03-28 20:38:28 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.pages;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import net.etfbl.ip.dto.User;
import net.etfbl.ip.beans.UserBean;

public final class updateUser_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("net.etfbl.ip.beans.UserBean");
    _jspx_imports_classes.add("net.etfbl.ip.dto.User");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("\r\n");
      net.etfbl.ip.beans.UserBean userBean = null;
      synchronized (session) {
        userBean = (net.etfbl.ip.beans.UserBean) _jspx_page_context.getAttribute("userBean", javax.servlet.jsp.PageContext.SESSION_SCOPE);
        if (userBean == null){
          throw new java.lang.InstantiationException("bean userBean not found within scope");
        }
      }
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"ISO-8859-1\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<link\r\n");
      out.write("      rel=\"stylesheet\" href=\"styles/style.css\" type=\"text/css\"\r\n");
      out.write("    /> \r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");

    String userIdStr = (String) request.getAttribute("userId");
    if (userIdStr != null) {
        try {
            Long userId = Long.parseLong(userIdStr);
            User user = userBean.getById(userId);
            
            
      out.write("\r\n");
      out.write("            <h1>Update Category:</h1>\r\n");
      out.write("            <form method=\"POST\" action=\"/AdminApp/?action=updateUser\">\r\n");
      out.write("                <input type=\"hidden\" name=\"userId\" value=\"");
      out.print(userId);
      out.write("\"/>\r\n");
      out.write("                <h3>User First Name:</h3>\r\n");
      out.write("                <input type=\"text\" name=\"userFirstName\" value=\"");
      out.print(user.getFirstName());
      out.write("\"/><br/>\r\n");
      out.write("                <h3>User Last Name:</h3>\r\n");
      out.write("                <input type=\"text\" name=\"userLastName\" value=\"");
      out.print(user.getLastName());
      out.write("\"/><br/>\r\n");
      out.write("                <h3>Username:</h3>\r\n");
      out.write("                <input type=\"text\" name=\"username\" value=\"");
      out.print(user.getUsername());
      out.write("\"/><br/>\r\n");
      out.write("                <h3>User Email:</h3>\r\n");
      out.write("                <input type=\"text\" name=\"userEmail\" value=\"");
      out.print(user.getEmail());
      out.write("\"/><br/>\r\n");
      out.write("                <h3>User Password:</h3>\r\n");
      out.write("                <input type=\"password\" name=\"userPassword\" value=\"");
      out.print(user.getPassword());
      out.write("\"/><br/>\r\n");
      out.write("                <h3>User Role:</h3>\r\n");
      out.write("                <input type=\"text\" name=\"userRole\" value=\"");
      out.print(user.getRole());
      out.write("\"/><br/>\r\n");
      out.write("                <h3>User City:</h3>\r\n");
      out.write("                <input type=\"text\" name=\"userCity\" value=\"");
      out.print(user.getCity());
      out.write("\"/><br/>\r\n");
      out.write("                <h3>Is Enabled:</h3>\r\n");
      out.write("                <input type=\"checkbox\" name=\"userIsEnabled\" value=\"");
      out.print(user.getEnabled());
      out.write("\"\r\n");
      out.write("                ");
      out.print( user.getEnabled() ? "checked" : "" );
      out.write("/><br/>\r\n");
      out.write("                <h3>Is Locked:</h3>\r\n");
      out.write("                <input type=\"checkbox\" name=\"userIsLocked\" value=\"");
      out.print(user.isLocked());
      out.write("\"\r\n");
      out.write("                ");
      out.print( user.isLocked() ? "checked" : "" );
      out.write("/><br/><br/>\r\n");
      out.write("                <input type=\"submit\" value=\"Update User\" name=\"submit\"/><br/>\r\n");
      out.write("                <h3>");
      out.print(session.getAttribute("notification").toString());
      out.write("</h3><br/>\r\n");
      out.write("            </form>\r\n");
      out.write("            ");

        } catch (NumberFormatException e) {
            out.println("Invalid user ID: " + userIdStr);
        }
    } else {
        out.println("User ID parameter is missing");
    }

      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}

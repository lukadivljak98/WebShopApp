/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.70
 * Generated at: 2023-03-28 21:13:12 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.pages;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import net.etfbl.ip.dto.Category;
import net.etfbl.ip.beans.CategoryBean;
import net.etfbl.ip.dto.User;
import net.etfbl.ip.beans.UserBean;
import net.etfbl.ip.beans.AttributeBean;

public final class dashboard_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("net.etfbl.ip.beans.CategoryBean");
    _jspx_imports_classes.add("net.etfbl.ip.dto.Category");
    _jspx_imports_classes.add("net.etfbl.ip.beans.UserBean");
    _jspx_imports_classes.add("net.etfbl.ip.beans.AttributeBean");
    _jspx_imports_classes.add("net.etfbl.ip.dto.User");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      net.etfbl.ip.beans.CategoryBean categoryBean = null;
      synchronized (session) {
        categoryBean = (net.etfbl.ip.beans.CategoryBean) _jspx_page_context.getAttribute("categoryBean", javax.servlet.jsp.PageContext.SESSION_SCOPE);
        if (categoryBean == null){
          throw new java.lang.InstantiationException("bean categoryBean not found within scope");
        }
      }
      out.write('\r');
      out.write('\n');
      net.etfbl.ip.beans.AttributeBean attributeBean = null;
      synchronized (session) {
        attributeBean = (net.etfbl.ip.beans.AttributeBean) _jspx_page_context.getAttribute("attributeBean", javax.servlet.jsp.PageContext.SESSION_SCOPE);
        if (attributeBean == null){
          throw new java.lang.InstantiationException("bean attributeBean not found within scope");
        }
      }
      out.write('\r');
      out.write('\n');
      net.etfbl.ip.beans.UserBean userBean = null;
      synchronized (session) {
        userBean = (net.etfbl.ip.beans.UserBean) _jspx_page_context.getAttribute("userBean", javax.servlet.jsp.PageContext.SESSION_SCOPE);
        if (userBean == null){
          throw new java.lang.InstantiationException("bean userBean not found within scope");
        }
      }
      out.write('\r');
      out.write('\n');
      net.etfbl.ip.beans.StatisticBean statisticBean = null;
      synchronized (session) {
        statisticBean = (net.etfbl.ip.beans.StatisticBean) _jspx_page_context.getAttribute("statisticBean", javax.servlet.jsp.PageContext.SESSION_SCOPE);
        if (statisticBean == null){
          throw new java.lang.InstantiationException("bean statisticBean not found within scope");
        }
      }
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("	<head>\r\n");
      out.write("		<meta http-equiv=\"Content-Type\" content=\"text/html\"; charset=\"UTF-8\">\r\n");
      out.write("		<title>Admin Dashboard</title>\r\n");
      out.write("		 <link\r\n");
      out.write("      rel=\"stylesheet\" href=\"styles/style.css\" type=\"text/css\"\r\n");
      out.write("    /> \r\n");
      out.write("	</head>\r\n");
      out.write("	<body>\r\n");
      out.write("		<h1>ETF_IP WEBSHOP ADMIN APP</h1>\r\n");
      out.write("		<a href=\"?action=logout\">Odjava sa sistema</a>\r\n");
      out.write("		<hr/>\r\n");
      out.write("		<h2>Manage Categories:</h2> <br/>\r\n");
      out.write("		<form method=\"POST\" action=\"?action=createCategory\">\r\n");
      out.write("			<h3>Create Category:</h3><br/>\r\n");
      out.write("			Category Name: <input type=\"text\" name=\"category\" id=\"category\"/><br/><br/>\r\n");
      out.write("			Category Attributes: <input type=\"text\" name=\"attributes\" id=\"attributes\"/><br/><br/>\r\n");
      out.write("			<input type=\"submit\" value=\"Add Category\" name=\"submit\"/><br/>\r\n");
      out.write("			<h3>");
      out.print(session.getAttribute("notification").toString());
      out.write("</h3><br/>\r\n");
      out.write("		</form>\r\n");
      out.write("			<h3>All Categories:</h3>\r\n");
      out.write("			");

				for(Category category : categoryBean.getAll()){
				    out.println("<div>");
					out.println("<br/>Category Name: " + category.getType() + "<br/><br/>");
					out.println("Category Attributes: " + category.getAttributes() + "<br/><br/>");
					out.println("<form method='POST' action='?action=deleteCategory'>");
				    out.println("<input type='hidden' name='categoryId' value='" + category.getId() + "'/>");
				    out.println("<input type='submit' value='Delete'/>");
				    out.println("</form>");
					//out.println("<a href=\"updateCategory.jsp?categoryId=" + category.getId() + "\">Edit</a><br/><br/>");
				    out.println("<form method='POST' action='?action=onUpdateCategory'>");
				    out.println("<input type='hidden' name='categoryId' value='" + category.getId() + "'/>");
				    out.println("<input type='submit' value='Edit'/>");
				    out.println("</form><br/><br/>");
				}
			
      out.write("\r\n");
      out.write("		<hr/>\r\n");
      out.write("		<h2>Manage Users:</h2><br/>\r\n");
      out.write("		<form method=\"POST\" action=\"?action=createUser\">\r\n");
      out.write("			<h3>Create User:</h3><br/>\r\n");
      out.write("			User First Name: <input type=\"text\" name=\"userFirstName\" id=\"userFirstName\"/><br/><br/>\r\n");
      out.write("			User Last Name: <input type=\"text\" name=\"userLastName\" id=\"userLastName\"/><br/><br/>\r\n");
      out.write("			Username: <input type=\"text\" name=\"username\" id=\"username\"/><br/><br/>\r\n");
      out.write("			Email: <input type=\"text\" name=\"userEmail\" id=\"userEmail\"/><br/><br/>\r\n");
      out.write("			Password: <input type=\"password\" name=\"userPassword\" id=\"userPassword\"/><br/><br/>\r\n");
      out.write("			User Role: <input type=\"text\" name=\"userRole\" id=\"userRole\"/><br/><br/>\r\n");
      out.write("			User City: <input type=\"text\" name=\"userCity\" id=\"userCity\"/><br/><br/>\r\n");
      out.write("			Is Enabled: <input type=\"checkbox\" name=\"userIsEnabled\" id=\"userIsEnabled\" value=\"true\"/><br/><br/>\r\n");
      out.write("			Is Locked: <input type=\"checkbox\" name=\"userLocked\" id=\"userLocked\" value=\"true\"/><br/><br/>\r\n");
      out.write("			<input type=\"submit\" value=\"Add User\" name=\"submit\"/><br/><br/>\r\n");
      out.write("			<h3>");
      out.print(session.getAttribute("notification").toString());
      out.write("</h3><br/>\r\n");
      out.write("		</form>\r\n");
      out.write("		\r\n");
      out.write("			<h3>All Users:</h3>\r\n");
      out.write("\r\n");
      out.write("			<table style=\"border-collapse: collapse; text-align: center;\" class=\"table\">\r\n");
      out.write("  				<thead>\r\n");
      out.write("   					<tr>\r\n");
      out.write("     				<th style=\"border-style: solid; width: 200px\">First Name</th>\r\n");
      out.write("      				<th style=\"border-style: solid; width: 200px\">Last Name</th>\r\n");
      out.write("      				<th style=\"border-style: solid; width: 200px\">Username</th>\r\n");
      out.write("     				<th style=\"border-style: solid; width: 200px\">Email</th>\r\n");
      out.write("      				<th style=\"border-style: solid; width: 200px\">Role</th>\r\n");
      out.write("      				<th style=\"border-style: solid; width: 200px\">City</th>\r\n");
      out.write("      				<th style=\"border-style: solid; width: 200px\">Is Enabled</th>\r\n");
      out.write("      				<th style=\"border-style: solid; width: 200px\">Is Locked</th>\r\n");
      out.write("      				<th style=\"border-style: solid; width: 200px\">Delete</th>\r\n");
      out.write("      				<th style=\"border-style: solid; width: 200px\">Update</th>\r\n");
      out.write("    				</tr>\r\n");
      out.write("  				</thead>\r\n");
      out.write("  				<tbody>\r\n");
      out.write("    			");
 for(User user : userBean.getAll()) { 
      out.write("\r\n");
      out.write("    				<tr>\r\n");
      out.write("      				<td style=\"border-style: solid; overflow: hidden; text-overflow: ellipsis; white-space: nowrap\">\r\n");
      out.write("      				");
      out.print( user.getFirstName() );
      out.write("</td>\r\n");
      out.write("      				<td style=\"border-style: solid; overflow: hidden; text-overflow: ellipsis; white-space: nowrap\">\r\n");
      out.write("      				");
      out.print( user.getLastName() );
      out.write("</td>\r\n");
      out.write("      				<td style=\"border-style: solid; overflow: hidden; text-overflow: ellipsis; white-space: nowrap\">\r\n");
      out.write("      				");
      out.print( user.getUsername() );
      out.write("</td>\r\n");
      out.write("      				<td style=\"border-style: solid; overflow: hidden; text-overflow: ellipsis; white-space: nowrap\">\r\n");
      out.write("      				");
      out.print( user.getEmail() );
      out.write("</td>\r\n");
      out.write("      				<td style=\"border-style: solid; overflow: hidden; text-overflow: ellipsis; white-space: nowrap\">\r\n");
      out.write("      				");
      out.print( user.getRole() );
      out.write("</td>\r\n");
      out.write("      				<td style=\"border-style: solid; overflow: hidden; text-overflow: ellipsis; white-space: nowrap\">\r\n");
      out.write("      				");
      out.print( user.getCity() );
      out.write("</td>\r\n");
      out.write("      				<td style=\"border-style: solid; overflow: hidden; text-overflow: ellipsis; white-space: nowrap\">\r\n");
      out.write("      				");
      out.print( user.getEnabled() );
      out.write("</td>\r\n");
      out.write("      				<td style=\"border-style: solid; overflow: hidden; text-overflow: ellipsis; white-space: nowrap\">\r\n");
      out.write("      				");
      out.print( user.isLocked() );
      out.write("</td>\r\n");
      out.write("      				<td style=\"border-style: solid; overflow: hidden; text-overflow: ellipsis; white-space: nowrap\">\r\n");
      out.write("        			<form method=\"POST\" action=\"?action=deleteUser\">\r\n");
      out.write("          			<input type=\"hidden\" name=\"userId\" value=\"");
      out.print( user.getId() );
      out.write("\">\r\n");
      out.write("          			<input type=\"submit\" value=\"Delete\">\r\n");
      out.write("        			</form>\r\n");
      out.write("      				</td>\r\n");
      out.write("      				<td style=\"border-style: solid\">\r\n");
      out.write("        			<form method=\"POST\" action=\"?action=goToUpdateUser\">\r\n");
      out.write("          			<input type=\"hidden\" name=\"userId\" value=\"");
      out.print( user.getId() );
      out.write("\">\r\n");
      out.write("          			<input type=\"submit\" value=\"Edit\">\r\n");
      out.write("       				 </form>\r\n");
      out.write("      				</td>\r\n");
      out.write("    				</tr>\r\n");
      out.write("   				 ");
 } 
      out.write("\r\n");
      out.write("  				</tbody>\r\n");
      out.write("			</table><br/>\r\n");
      out.write("			<hr/>\r\n");
      out.write("			<div style=\"height: 300px; overflow: auto;\">\r\n");
      out.write("  				<h2>Statistic:</h2>\r\n");
      out.write("  				<br/>\r\n");
      out.write("  					");

    					out.println(statisticBean.readLog());
  					
      out.write("\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("	</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
